use crate::ascii_mapping::{AsciiConfig, Charset};
use std::error::Error;
use std::fs::File;
use std::io::Write;

pub fn save_ascii_art_to_file(ascii_art: &str, output_path: &str, ascii_config: &AsciiConfig) -> Result<(), Box<dyn Error>> {
    let mut file = File::create(output_path)?;
    
    file.write_all(ascii_art.as_bytes())?;
    
    let charset_str = if ascii_config.charset == Charset::CUSTOM { 
        &ascii_config.custom_charset
    } else { 
        ascii_config.charset.as_str()
    };
    
    writeln!(file, "\n{}", "-".repeat(50))?;
    writeln!(file, "Generated by ASCII Art Generator v{}", env!("CARGO_PKG_VERSION"))?;
    writeln!(file, "Charset: {}, Enable Color: {}, Invert Output: {}", charset_str, ascii_config.color, ascii_config.invert)?;
    
    println!("ASCII Art saved to {}", output_path);
    Ok(())
}